name: E2E Version 2 Provision and Test

on:
  workflow_call:
    inputs:
      ref:
        type: string
      name:
        type: string
        required: true

permissions:
  id-token: write

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: '~1.22'
          cache-dependency-path: "**/*.sum"

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Provision Infrastructure
        shell: bash
        run: (cd testing/e2e && go run ./main.go infra --subscription="${{ secrets.AZURE_SUBSCRIPTION_ID }}" --tenant="${{ secrets.AZURE_TENANT_ID }}" --names="${{ inputs.name }}" --infra-file="./infra-${{ inputs.name }}.json")
        if: # avoids race condition security vulnerability by ensuring we are only running changes that were /ok-to-test'd
          (github.event_name == 'repository_dispatch' &&
          github.event.client_payload.slash_command.args.named.sha != '' &&
          contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha))

      - name: Ensure ref
        uses: actions/github-script@v7
        if: ${{ !((github.event_name == 'repository_dispatch' && github.event.client_payload.slash_command.args.named.sha != '' && contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha)) }}
        with:
          script: core.setFailed('Ref is not latest')

      - name: Upload infra file
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: infra
          path: testing/e2e/infra-${{ inputs.name }}.json
  test:
    needs: provision
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: '~1.22'
          cache-dependency-path: "**/*.sum"

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: infra
          path: testing/e2e/

      - name: Test
        shell: bash
        id: test
        run: (cd testing/e2e && go run ./main.go deploy --infra-file="./infra-${{ inputs.name }}.json")
        if:
          (github.event_name == 'repository_dispatch' &&
          github.event.client_payload.slash_command.args.named.sha != '' &&
          contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha))

      - name: Print test logs
        shell: bash
        run: echo "printing first 100 lines and last 200 lines of e2e logs..." && head -n 100 testing/e2e/job-app-routing-operator-e2e.log && tail -n 200 testing/e2e/job-app-routing-operator-e2e.log
        if: always() && (steps.test.outcome == 'failure' || steps.test.outcome == 'success')
