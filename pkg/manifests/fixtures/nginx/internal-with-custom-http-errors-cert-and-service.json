[
  {
    "kind": "Namespace",
    "apiVersion": "v1",
    "metadata": {
      "name": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "openservicemesh.io/monitored-by": "osm"
      }
    },
    "spec": {},
    "status": {}
  },
  {
    "kind": "IngressClass",
    "apiVersion": "networking.k8s.io/v1",
    "metadata": {
      "name": "nginx-private",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "spec": {
      "controller": "test-controller-class"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "nginx",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "rules": [
      {
        "verbs": [
          "list",
          "watch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets",
          "namespaces"
        ]
      },
      {
        "verbs": [
          "list",
          "watch"
        ],
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ]
      },
      {
        "verbs": [
          "get"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ]
      },
      {
        "verbs": [
          "get",
          "watch",
          "list"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ]
      },
      {
        "verbs": [
          "create",
          "patch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ]
      },
      {
        "verbs": [
          "update"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingressclasses"
        ]
      },
      {
        "verbs": [
          "list",
          "watch",
          "get"
        ],
        "apiGroups": [
          "discovery.k8s.io"
        ],
        "resources": [
          "endpointslices"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "rules": [
      {
        "verbs": [
          "get"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ]
      },
      {
        "verbs": [
          "update"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "pods",
          "secrets",
          "endpoints"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ]
      },
      {
        "verbs": [
          "update"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ]
      },
      {
        "verbs": [
          "get",
          "list",
          "watch"
        ],
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingressclasses"
        ]
      },
      {
        "verbs": [
          "get",
          "update"
        ],
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ],
        "resourceNames": [
          "nginx"
        ]
      },
      {
        "verbs": [
          "create"
        ],
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ]
      },
      {
        "verbs": [
          "create",
          "patch"
        ],
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ]
      },
      {
        "verbs": [
          "list",
          "watch",
          "get"
        ],
        "apiGroups": [
          "discovery.k8s.io"
        ],
        "resources": [
          "endpointslices"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "nginx",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "nginx",
        "namespace": "test-namespace"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "nginx"
    }
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "nginx",
        "namespace": "test-namespace"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "nginx"
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      },
      "annotations": {
        "prometheus.io/port": "10254",
        "prometheus.io/scrape": "true"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http"
        },
        {
          "name": "https",
          "port": 443,
          "targetPort": "https"
        },
        {
          "name": "prometheus",
          "port": 10254,
          "targetPort": "prometheus"
        }
      ],
      "selector": {
        "app": "nginx"
      },
      "type": "LoadBalancer",
      "externalTrafficPolicy": "Local"
    },
    "status": {
      "loadBalancer": {}
    }
  },
  {
    "kind": "Deployment",
    "apiVersion": "apps/v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "nginx"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "nginx",
            "app.kubernetes.io/component": "ingress-controller",
            "app.kubernetes.io/managed-by": "aks-app-routing-operator"
          },
          "annotations": {
            "openservicemesh.io/sidecar-injection": "disabled",
            "prometheus.io/port": "10254",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "controller",
              "image": "test-registry/oss/kubernetes/ingress/nginx-ingress-controller:v1.10.0",
              "args": [
                "/nginx-ingress-controller",
                "--ingress-class=nginx-private",
                "--controller-class=test-controller-class",
                "--election-id=nginx",
                "--publish-service=$(POD_NAMESPACE)/nginx",
                "--configmap=$(POD_NAMESPACE)/nginx",
                "--enable-annotation-validation=true",
                "--http-port=8080",
                "--https-port=8443",
                "--default-ssl-certificate=fakesslnamespace/fakesslname",
                "--default-backend-service=fakebackendnamespace/fakebackendname"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080
                },
                {
                  "name": "https",
                  "containerPort": 8443
                },
                {
                  "name": "prometheus",
                  "containerPort": 10254
                }
              ],
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "127Mi"
                }
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 1,
                "periodSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 1,
                "periodSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "securityContext": {
                "capabilities": {
                  "add": [
                    "NET_BIND_SERVICE"
                  ],
                  "drop": [
                    "ALL"
                  ]
                },
                "runAsUser": 101,
                "runAsNonRoot": true,
                "allowPrivilegeEscalation": false,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "serviceAccountName": "nginx",
          "affinity": {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.azure.com/cluster",
                        "operator": "Exists"
                      },
                      {
                        "key": "type",
                        "operator": "NotIn",
                        "values": [
                          "virtual-kubelet"
                        ]
                      },
                      {
                        "key": "kubernetes.io/os",
                        "operator": "In",
                        "values": [
                          "linux"
                        ]
                      }
                    ]
                  }
                ]
              },
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 100,
                  "preference": {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.azure.com/mode",
                        "operator": "In",
                        "values": [
                          "system"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "tolerations": [
            {
              "key": "CriticalAddonsOnly",
              "operator": "Exists"
            }
          ],
          "priorityClassName": "system-cluster-critical",
          "topologySpreadConstraints": [
            {
              "maxSkew": 1,
              "topologyKey": "kubernetes.io/hostname",
              "whenUnsatisfiable": "ScheduleAnyway",
              "labelSelector": {
                "matchLabels": {
                  "app": "nginx"
                }
              }
            }
          ]
        }
      },
      "strategy": {},
      "revisionHistoryLimit": 2
    },
    "status": {}
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "data": {
      "allow-snippet-annotations": "true",
      "annotation-value-word-blocklist": "load_module,lua_package,_by_lua,location,root,proxy_pass,serviceaccount,{,},'",
      "force-ssl-redirect": "true",
      "custom-http-errors": "404,503"
    }
  },
  {
    "kind": "HorizontalPodAutoscaler",
    "apiVersion": "autoscaling/v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "kind": "Deployment",
        "name": "nginx",
        "apiVersion": "apps/v1"
      },
      "minReplicas": 2,
      "maxReplicas": 100,
      "targetCPUUtilizationPercentage": 80
    },
    "status": {
      "currentReplicas": 0,
      "desiredReplicas": 0
    }
  },
  {
    "kind": "PodDisruptionBudget",
    "apiVersion": "policy/v1",
    "metadata": {
      "name": "nginx",
      "namespace": "test-namespace",
      "creationTimestamp": null,
      "labels": {
        "app.kubernetes.io/component": "ingress-controller",
        "app.kubernetes.io/managed-by": "aks-app-routing-operator",
        "app.kubernetes.io/name": "nginx"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "nginx"
        }
      },
      "maxUnavailable": 1
    },
    "status": {
      "disruptionsAllowed": 0,
      "currentHealthy": 0,
      "desiredHealthy": 0,
      "expectedPods": 0
    }
  }
]