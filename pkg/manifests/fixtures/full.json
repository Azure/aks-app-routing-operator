[
    {
      "kind": "Namespace",
      "apiVersion": "v1",
      "metadata": {
        "name": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator",
          "openservicemesh.io/monitored-by": "osm"
        },
        "annotations": {
          "openservicemesh.io/sidecar-injection": "disabled"
        }
      },
      "spec": {},
      "status": {}
    },
    {
      "kind": "IngressClass",
      "apiVersion": "networking.k8s.io/v1",
      "metadata": {
        "name": "webapprouting.aks.io",
        "creationTimestamp": null
      },
      "spec": {
        "controller": "k8s.io/ingress-nginx"
      }
    },
    {
      "kind": "ServiceAccount",
      "apiVersion": "v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      }
    },
    {
      "kind": "ClusterRole",
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "rules": [
        {
          "verbs": [
            "get",
            "watch",
            "list"
          ],
          "apiGroups": [
            ""
          ],
          "resources": [
            "endpoints",
            "pods",
            "services",
            "secrets",
            "configmaps"
          ]
        },
        {
          "verbs": [
            "*"
          ],
          "apiGroups": [
            ""
          ],
          "resources": [
            "configmaps",
            "events"
          ]
        },
        {
          "verbs": [
            "get",
            "watch",
            "list"
          ],
          "apiGroups": [
            "networking.k8s.io"
          ],
          "resources": [
            "ingresses"
          ]
        },
        {
          "verbs": [
            "*"
          ],
          "apiGroups": [
            "networking.k8s.io"
          ],
          "resources": [
            "ingresses/status"
          ]
        },
        {
          "verbs": [
            "list",
            "watch",
            "get"
          ],
          "apiGroups": [
            "networking.k8s.io"
          ],
          "resources": [
            "ingressclasses"
          ]
        },
        {
          "verbs": [
            "watch",
            "list"
          ],
          "apiGroups": [
            ""
          ],
          "resources": [
            "nodes"
          ]
        }
      ]
    },
    {
      "kind": "ClusterRoleBinding",
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "app-routing-ingress-controller",
          "namespace": "test-namespace"
        }
      ],
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "app-routing-ingress-controller"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "http",
            "port": 80,
            "targetPort": "http"
          },
          {
            "name": "https",
            "port": 443,
            "targetPort": "https"
          }
        ],
        "selector": {
          "app": "app-routing-ingress-controller"
        },
        "type": "LoadBalancer",
        "externalTrafficPolicy": "Local"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "Deployment",
      "apiVersion": "apps/v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "app-routing-ingress-controller"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "app-routing-ingress-controller"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "controller",
                "image": "test-registry/oss/kubernetes/ingress/nginx-ingress-controller:1.0.5",
                "args": [
                  "/nginx-ingress-controller",
                  "--ingress-class=webapprouting.aks.io",
                  "--publish-service=$(POD_NAMESPACE)/app-routing-ingress-controller",
                  "--http-port=8080",
                  "--https-port=8443"
                ],
                "ports": [
                  {
                    "name": "http",
                    "containerPort": 8080
                  },
                  {
                    "name": "https",
                    "containerPort": 8443
                  }
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "1500m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "500m",
                    "memory": "127Mi"
                  }
                },
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "securityContext": {
                  "runAsUser": 101
                }
              }
            ],
            "serviceAccountName": "app-routing-ingress-controller",
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.azure.com/cluster",
                          "operator": "Exists"
                        },
                        {
                          "key": "type",
                          "operator": "NotIn",
                          "values": [
                            "virtual-kubelet"
                          ]
                        },
                        {
                          "key": "kubernetes.io/os",
                          "operator": "In",
                          "values": [
                            "linux"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "preference": {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.azure.com/mode",
                          "operator": "In",
                          "values": [
                            "system"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "tolerations": [
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "strategy": {},
        "revisionHistoryLimit": 2
      },
      "status": {}
    },
    {
      "kind": "PodDisruptionBudget",
      "apiVersion": "policy/v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "app-routing-ingress-controller"
          }
        },
        "maxUnavailable": 1
      },
      "status": {
        "disruptionsAllowed": 0,
        "currentHealthy": 0,
        "desiredHealthy": 0,
        "expectedPods": 0
      }
    },
    {
      "kind": "HorizontalPodAutoscaler",
      "apiVersion": "autoscaling/v1",
      "metadata": {
        "name": "app-routing-ingress-controller",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "spec": {
        "scaleTargetRef": {
          "kind": "Deployment",
          "name": "app-routing-ingress-controller",
          "apiVersion": "apps/v1"
        },
        "minReplicas": 2,
        "maxReplicas": 100,
        "targetCPUUtilizationPercentage": 90
      },
      "status": {
        "currentReplicas": 0,
        "desiredReplicas": 0
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "app-routing-external-dns",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "data": {
        "azure.json": "{\"cloud\":\"test-cloud\",\"location\":\"test-location\",\"resourceGroup\":\"test-dns-zone-rg\",\"subscriptionId\":\"test-dns-zone-sub\",\"tenantId\":\"test-tenant-id\",\"useManagedIdentityExtension\":true,\"userAssignedIdentityID\":\"test-msi-client-id\"}"
      }
    },
    {
      "kind": "Deployment",
      "apiVersion": "apps/v1",
      "metadata": {
        "name": "app-routing-external-dns",
        "namespace": "test-namespace",
        "creationTimestamp": null,
        "labels": {
          "app.kubernetes.io/managed-by": "aks-app-routing-operator"
        }
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app": "app-routing-external-dns"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "app-routing-external-dns"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "azure-config",
                "configMap": {
                  "name": "app-routing-external-dns"
                }
              }
            ],
            "containers": [
              {
                "name": "controller",
                "image": "test-registry/oss/kubernetes/external-dns:v0.11.0",
                "args": [
                  "--provider=azure",
                  "--source=ingress",
                  "--interval=3m0s",
                  "--txt-owner-id=",
                  "--domain-filter=test-dns-zone-domain"
                ],
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "250Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "250Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "azure-config",
                    "readOnly": true,
                    "mountPath": "/etc/kubernetes"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 7979,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 7979,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                }
              }
            ],
            "serviceAccountName": "app-routing-ingress-controller",
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.azure.com/cluster",
                          "operator": "Exists"
                        },
                        {
                          "key": "type",
                          "operator": "NotIn",
                          "values": [
                            "virtual-kubelet"
                          ]
                        },
                        {
                          "key": "kubernetes.io/os",
                          "operator": "In",
                          "values": [
                            "linux"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "preference": {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.azure.com/mode",
                          "operator": "In",
                          "values": [
                            "system"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "tolerations": [
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "strategy": {},
        "revisionHistoryLimit": 2
      },
      "status": {}
    }
  ]