apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  annotations:
    description: Controls the allowlist of FlexVolume drivers. Corresponds to the `allowedFlexVolumes` field in PodSecurityPolicy. For more information, see https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers
    metadata.gatekeeper.sh/title: FlexVolumes
    metadata.gatekeeper.sh/version: 1.0.1
  name: k8spspflexvolumes
spec:
  crd:
    spec:
      names:
        kind: K8sPSPFlexVolumes
      validation:
        openAPIV3Schema:
          description: Controls the allowlist of FlexVolume drivers. Corresponds to the `allowedFlexVolumes` field in PodSecurityPolicy. For more information, see https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers
          properties:
            allowedFlexVolumes:
              description: An array of AllowedFlexVolume objects.
              items:
                properties:
                  driver:
                    description: The name of the FlexVolume driver.
                    type: string
                type: object
              type: array
          type: object
  targets:
    - libs:
        - |
          package lib.exclude_update

          is_update(review) {
              review.operation == "UPDATE"
          }
      rego: |
        package k8spspflexvolumes

        import data.lib.exclude_update.is_update

        violation[{"msg": msg, "details": {}}] {
            # spec.volumes field is immutable.
            not is_update(input.review)

            volume := input_flexvolumes[_]
            not input_flexvolumes_allowed(volume)
            msg := sprintf("FlexVolume %v is not allowed, pod: %v. Allowed drivers: %v", [volume, input.review.object.metadata.name, input.parameters.allowedFlexVolumes])
        }

        input_flexvolumes_allowed(volume) {
            input.parameters.allowedFlexVolumes[_].driver == volume.flexVolume.driver
        }

        input_flexvolumes[v] {
            v := input.review.object.spec.volumes[_]
            has_field(v, "flexVolume")
        }

        # has_field returns whether an object has a field
        has_field(object, field) = true {
            object[field]
        }
      target: admission.k8s.gatekeeper.sh
